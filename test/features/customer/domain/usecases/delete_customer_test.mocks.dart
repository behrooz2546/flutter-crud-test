// Mocks generated by Mockito 5.3.2 from annotations
// in mc_crud_test/test/features/customer/domain/usecases/delete_customer_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:either_dart/either.dart' as _i2;
import 'package:mc_crud_test/core/error/failures.dart' as _i5;
import 'package:mc_crud_test/features/customer/data/models/customer_model.dart'
    as _i6;
import 'package:mc_crud_test/features/customer/domain/repositories/delete_customer_repository.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [DeleteCustomerRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockDeleteCustomerRepository extends _i1.Mock
    implements _i3.DeleteCustomerRepository {
  MockDeleteCustomerRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, bool>> delete(String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [id],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, bool>>.value(
            _FakeEither_0<_i5.Failure, bool>(
          this,
          Invocation.method(
            #delete,
            [id],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, bool>>);
}

/// A class which mocks [CustomerModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockCustomerModel extends _i1.Mock implements _i6.CustomerModel {
  MockCustomerModel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set id(int? _id) => super.noSuchMethod(
        Invocation.setter(
          #id,
          _id,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set firstName(String? _firstName) => super.noSuchMethod(
        Invocation.setter(
          #firstName,
          _firstName,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set lastName(String? _lastName) => super.noSuchMethod(
        Invocation.setter(
          #lastName,
          _lastName,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set dateOfBirth(DateTime? _dateOfBirth) => super.noSuchMethod(
        Invocation.setter(
          #dateOfBirth,
          _dateOfBirth,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set phoneNumber(String? _phoneNumber) => super.noSuchMethod(
        Invocation.setter(
          #phoneNumber,
          _phoneNumber,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set email(String? _email) => super.noSuchMethod(
        Invocation.setter(
          #email,
          _email,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set bankAccountNumber(String? _bankAccountNumber) => super.noSuchMethod(
        Invocation.setter(
          #bankAccountNumber,
          _bankAccountNumber,
        ),
        returnValueForMissingStub: null,
      );
  @override
  List<Object?> get props => (super.noSuchMethod(
        Invocation.getter(#props),
        returnValue: <Object?>[],
      ) as List<Object?>);
  @override
  String get fullName => (super.noSuchMethod(
        Invocation.getter(#fullName),
        returnValue: '',
      ) as String);
  @override
  Map<String, dynamic> toJson() => (super.noSuchMethod(
        Invocation.method(
          #toJson,
          [],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);
  @override
  Map<String, dynamic> toMap() => (super.noSuchMethod(
        Invocation.method(
          #toMap,
          [],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);
}
